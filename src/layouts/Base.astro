---
import { Footer, Header } from '~components';

export interface Props {
	subtitle?: string;
	skipTargetId?: string;
	title: string;
}

const { title: _title, skipTargetId } = Astro.props as Props;

// Create a title that includes the page title, if one is provided.
// (e.g. `Participate | The Collab Lab`).
// The homepage is just `The Collab Lab`.
const title =
	_title === 'The Collab Lab' ? _title : `${_title} | The Collab Lab`;

// TODO: Allow the use of a custom description for each page,
// (via prop?), and fall back to this description if none is provided.
const description =
	'Gain practical experience by working remotely on real world projects with other early-career developers.';

const canonicalURL = new URL(
	Astro.url.pathname.replace(/([^/])$/, '$1/'),
	Astro.site,
);

const jsonLDSchema = JSON.stringify(
	{
		'@context': 'http://www.schema.org',
		'@type': 'EducationalOrganization',
		name: 'The Collab Lab',
		logo: 'https://the-collab-lab.codes/img/sig-logo.png',
		image: 'https://the-collab-lab.codes/img/sig-logo.png',
		description:
			'Gain practical experience by working remotely on real world projects with other early-career developers.',
	},
	null,
	0,
);
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<meta
			name="description"
			content="Gain practical experience by working remotely on real world projects with other early-career developers."
		/>
		<meta property="og:title" content="The Collab Lab" />
		<meta
			property="og:description"
			content="Gain practical experience by working remotely on real world projects with other early-career developers."
		/>
		<meta
			property="og:image"
			content={`${Astro.site}img/participate-developers-collage.png`}
		/>
		<meta property="og:url" content={canonicalURL.href} />
		<meta property="og:type" content="website" />
		<title>
			{title === 'The Collab Lab' ? title : `${title} | The Collab Lab`}
		</title>
		<link rel="canonical" href={canonicalURL.href} />
		<link rel="icon" type="image/ico" href="/favicon.ico" />
		<link
			rel="preload"
			as="font"
			type="font/woff2"
			href="/fonts/outfit-v6-latin-regular.woff2"
			crossorigin
		/>
		<link
			rel="preload"
			as="font"
			type="font/woff2"
			href="/fonts/outfit-v6-latin-700.woff2"
			crossorigin
		/>
		<script
			type="application/ld+json"
			set:html={JSON.stringify(jsonLDSchema, null, 0)}
		></script>
	</head>
	<body>
		<a href={`#${skipTargetId}`} class="c-skip-link">Skip to content</a>
		<a href="#support-collab-lab" class="c-skip-link">Skip to footer</a>
		<Header />
		<main>
			<slot />
		</main>
		<Footer />
		<style is:global>
			@font-face {
				font-display: swap;
				font-family: 'Outfit';
				font-style: normal;
				font-weight: 400;
				src: url('/fonts/outfit-v6-latin-regular.woff2') format('woff2');
			}
			/* outfit-700 - latin */
			@font-face {
				font-display: swap;
				font-family: 'Outfit';
				font-style: normal;
				font-weight: 700;
				src: url('/fonts/outfit-v6-latin-700.woff2') format('woff2');
			}

			:root {
				--color-black-dark: hsla(0, 0%, 5%, 1);
				--color-black-mid: hsla(0, 0%, 55%, 1);
				--color-black-light: hsla(0, 0%, 98%, 1);

				--color-pink-dark: hsla(313, 26%, 57%, 1);
				--color-pink-mid: hsla(313, 100%, 79%, 1);
				--color-pink-light: hsla(313, 100%, 93%, 1);

				--color-blue-dark: hsla(54, 35%, 55%, 1);
				--color-yellow-mid: hsla(54, 100%, 50%, 1);
				--color-yellow-light: hsla(54, 100%, 83%, 1);

				--color-blue-dark: hsla(216, 24%, 44%, 1);
				--color-blue-mid: hsla(216, 100%, 52%, 1);
				--color-blue-light: hsla(216, 100%, 91%, 1);

				--color-green-dark: hsla(137, 39%, 30%, 1);
				--color-green-mid: hsla(145, 63%, 42%, 1);
				--color-green-light: hsla(137, 100%, 90%, 1);

				--color-white: #fff;

				--color-text: var(--color-black-dark);
				--color-bg: var(--color-white);
				--color-border: hsl(17, 24%, 90%);

				--ratio: 1.5;
				--space: 1.5rem;
				--measure: 96ch;
				--threshold: 68ch;

				--s-5: calc(var(--s-4) / var(--ratio));
				--s-4: calc(var(--s-3) / var(--ratio));
				--s-3: calc(var(--s-2) / var(--ratio));
				--s-2: calc(var(--s-1) / var(--ratio));
				--s-1: calc(var(--s0) / var(--ratio));
				--s0: 1rem;
				--s1: calc(var(--s0) * var(--ratio));
				--s2: calc(var(--s1) * var(--ratio));
				--s3: calc(var(--s2) * var(--ratio));
				--s4: calc(var(--s3) * var(--ratio));
				--s5: calc(var(--s4) * var(--ratio));

				--font-size-base: 1.4rem;
				--font-size-h1: 3.2rem;
				--font-size-h2: 2.4rem;
				--font-size-h3: 2rem;
				--font-size-h4: 1.6rem;

				font-size: calc(0.111vw + 0.625em);
				-webkit-font-smoothing: antialiased;
				-moz-osx-font-smoothing: grayscale;
				text-rendering: optimizeLegibility;
			}

			*,
			*::before,
			*::after {
				box-sizing: border-box;
				color: inherit;
				letter-spacing: 0.09em;
				margin-block-start: 0;
				max-inline-size: var(--measure);
			}

			html,
			body,
			div,
			header,
			nav,
			main,
			footer,
			section,
			ul {
				max-inline-size: none;
			}

			html {
				/* Use 'Outfit' webfont and fall back to a system font stack */
				--font-stack: 'Outfit', apple-system, BlinkMacSystemFont, 'Segoe UI',
					Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji',
					'Segoe UI Emoji', 'Segoe UI Symbol';

				background-color: var(--color-bg);
				color: var(--color-text);
				font-family: var(--font-stack);
				/* font-size: 62.5%;```` */
			}

			body {
				font-size: var(--font-size-base);
				line-height: 1.445;
				margin: 0;
			}

			main > *,
			footer > * {
				padding-block-end: 4.5rem;
				padding-block-start: 4.5rem;
			}

			h1,
			h2,
			h3,
			h4,
			h5,
			h6,
			.h1,
			.h2,
			.h3,
			.h4,
			.h5,
			.h6 {
				font-family: var(--font-stack);
				font-weight: 700;
				line-height: 1.25;
				text-align: left;
			}

			h1,
			h2,
			.h1,
			.h2 {
				max-width: 68ch;
			}

			h1,
			.h1 {
				font-size: var(--s4);
				text-align: center;
			}

			h2,
			.h2 {
				font-size: var(--s3);
			}

			h3,
			.h3 {
				font-size: var(--s2);
			}

			h4,
			.h4 {
				font-size: var(--s1);
			}

			ul {
				list-style: none;
				margin: 0;
				padding: 0;
			}

			figure {
				margin: 0;
			}

			img {
				height: auto;
				max-width: 100%;
			}

			a {
				color: var(--color-blue-mid);
			}

			.u-bg-black a {
				color: var(--color-yellow-mid);
			}

			.l-center {
				box-sizing: content-box;
				margin-inline: auto;
				max-inline-size: var(--measure);
				padding-inline-start: 1rem;
				padding-inline-end: 1rem;
			}

			.l-center--wide {
				box-sizing: content-box;
				margin-inline: auto;
				max-inline-size: min(95vw, 98rem);
			}
			.l-stack {
				display: flex;
				flex-direction: column;
				justify-content: flex-start;
			}

			.l-stack > * {
				margin-block: 0;
			}

			.l-stack > * + * {
				margin-block-start: var(--space, 1.5rem);
			}

			.l-cluster {
				display: flex;
				flex-wrap: wrap;
				gap: var(--space, 1rem);
				justify-content: space-between;
				align-items: center;
			}

			.l-cluster-nowrap {
				align-items: flex-start;
				display: flex;
				flex-direction: row;
				flex-wrap: wrap;
				justify-content: flex-start;
			}

			.l-grid {
				display: grid;
				gap: 4rem;
			}

			@supports (width: min(320px, 100%)) {
				.l-grid {
					grid-template-columns: repeat(
						auto-fit,
						minmax(min(320px, 100%), 1fr)
					);
				}
			}

			.l-switcher {
				display: flex;
				flex-wrap: wrap;
				gap: var(--s3);
			}

			.l-switcher > * {
				flex-grow: 1;
				flex-basis: calc((var(--threshold, 30rem) - 100%) * 999);
			}

			.l-switcher > :nth-last-child(n + 5),
			.l-switcher > :nth-last-child(n + 5) ~ * {
				flex-basis: 100%;
			}

			.c-skip-link {
				appearance: button;
				background-color: var(--color-pink-mid);
				border-radius: 4px;
				color: inherit;
				min-width: 16ch;
				padding: 0.5rem 1.6rem;
				position: absolute;
				text-align: center;
				text-decoration: none;
				transform: translate(-100%, -100%);
			}

			.c-skip-link:focus-visible {
				transform: translate(0, 0);
			}

			.c-donation-button {
				appearance: button;
				border: 1px solid var(--color-text);
				border-radius: 4px;
				color: inherit;
				display: inline-block;
				padding: 0.5rem 1.6rem;
				text-decoration: none;
			}

			.c-donation-button + .c-donation-button {
				margin-left: 0.4rem;
			}

			.u-center-text {
				text-align: center;
			}

			.u-gap-0 {
				gap: 0;
			}

			.u-text-bold {
				font-weight: 700;
			}

			.u-text-large {
				font-size: 1.25em;
				line-height: 1.2;
			}

			.u-desktop-only {
				display: none;
			}

			@media (min-width: 694px) {
				.u-desktop-only {
					display: block;
				}
			}

			.u-bg-black {
				--color-bg: var(--color-black-dark);
				--color-text: var(--color-white);

				background-color: var(--color-bg);
				color: var(--color-text);
			}
		</style>
	</body>
</html>
